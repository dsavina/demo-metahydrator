<?php
namespace Demo\Model\Bean\Generated;

use Mouf\Database\TDBM\ResultIterator;
use Mouf\Database\TDBM\ResultArray;
use Mouf\Database\TDBM\AlterableResultIterator;
use Demo\Model\Bean\Address;
use Mouf\Database\TDBM\AbstractTDBMObject;

/*
 * This file has been automatically generated by TDBM.
 * DO NOT edit this file, as it might be overwritten.
 * If you need to perform changes, edit the Address class instead!
 */

/**
 * The AbstractAddress class maps the 'addresses' table in database.
 */
abstract class AbstractAddress extends AbstractTDBMObject implements \JsonSerializable
{
    /**
     * The constructor takes all compulsory arguments.
     *

     */
    public function __construct()
    {
        parent::__construct();
    }
        /**
     * The getter for the "id" column.
     *
     * @return int|null
     */
    public function getId() : ?int
    {
        return $this->get('id', 'addresses');
    }

    /**
     * The setter for the "id" column.
     *
     * @param int $id
     */
    public function setId(int $id) : void
    {
        $this->set('id', $id, 'addresses');
    }

    /**
     * The getter for the "number" column.
     *
     * @return string|null
     */
    public function getNumber() : ?string
    {
        return $this->get('number', 'addresses');
    }

    /**
     * The setter for the "number" column.
     *
     * @param string $number
     */
    public function setNumber(?string $number) : void
    {
        $this->set('number', $number, 'addresses');
    }

    /**
     * The getter for the "street" column.
     *
     * @return string|null
     */
    public function getStreet() : ?string
    {
        return $this->get('street', 'addresses');
    }

    /**
     * The setter for the "street" column.
     *
     * @param string $street
     */
    public function setStreet(?string $street) : void
    {
        $this->set('street', $street, 'addresses');
    }

    /**
     * Returns the list of User pointing to this bean via the address_id column.
     *
     * @return User[]|AlterableResultIterator
     */
    public function getUsers() : AlterableResultIterator
    {
        return $this->retrieveManyToOneRelationshipsStorage('users', 'address', 'users', ['users.address_id' => $this->get('id', 'addresses')]);
    }


    /**
     * Serializes the object for JSON encoding.
     *
     * @param bool $stopRecursion Parameter used internally by TDBM to stop embedded objects from embedding other objects.
     * @return array
     */
    public function jsonSerialize($stopRecursion = false)
    {
        $array = [];
        $array['id'] = $this->getId();
        $array['number'] = $this->getNumber();
        $array['street'] = $this->getStreet();


        return $array;
    }

    /**
     * Returns an array of used tables by this bean (from parent to child relationship).
     *
     * @return string[]
     */
    protected function getUsedTables() : array
    {
        return [ 'addresses' ];
    }
}
