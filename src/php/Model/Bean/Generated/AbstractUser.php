<?php
namespace Demo\Model\Bean\Generated;

use Mouf\Database\TDBM\ResultIterator;
use Mouf\Database\TDBM\ResultArray;
use Mouf\Database\TDBM\AlterableResultIterator;
use Demo\Model\Bean\Address;
use Demo\Model\Bean\Company;
use Mouf\Database\TDBM\AbstractTDBMObject;

/*
 * This file has been automatically generated by TDBM.
 * DO NOT edit this file, as it might be overwritten.
 * If you need to perform changes, edit the User class instead!
 */

/**
 * The AbstractUser class maps the 'users' table in database.
 */
abstract class AbstractUser extends AbstractTDBMObject implements \JsonSerializable
{
    /**
     * The constructor takes all compulsory arguments.
     *

     */
    public function __construct()
    {
        parent::__construct();
    }
        /**
     * The getter for the "id" column.
     *
     * @return int|null
     */
    public function getId() : ?int
    {
        return $this->get('id', 'users');
    }

    /**
     * The setter for the "id" column.
     *
     * @param int $id
     */
    public function setId(int $id) : void
    {
        $this->set('id', $id, 'users');
    }

    /**
     * Returns the Address object bound to this object via the address_id column.
     *
     * @return Address|null
     */
    public function getAddress(): ?Address
    {
        return $this->getRef('address', 'users');
    }

    /**
     * The setter for the Address object bound to this object via the address_id column.
     *
     * @param Address|null $object
     */
    public function setAddress(?Address $object) : void
    {
        $this->setRef('address', $object, 'users');
    }

    /**
     * Returns the Company object bound to this object via the company_id column.
     *
     * @return Company|null
     */
    public function getCompany(): ?Company
    {
        return $this->getRef('company', 'users');
    }

    /**
     * The setter for the Company object bound to this object via the company_id column.
     *
     * @param Company|null $object
     */
    public function setCompany(?Company $object) : void
    {
        $this->setRef('company', $object, 'users');
    }

    /**
     * The getter for the "firstname" column.
     *
     * @return string|null
     */
    public function getFirstname() : ?string
    {
        return $this->get('firstname', 'users');
    }

    /**
     * The setter for the "firstname" column.
     *
     * @param string $firstname
     */
    public function setFirstname(?string $firstname) : void
    {
        $this->set('firstname', $firstname, 'users');
    }

    /**
     * The getter for the "lastname" column.
     *
     * @return string|null
     */
    public function getLastname() : ?string
    {
        return $this->get('lastname', 'users');
    }

    /**
     * The setter for the "lastname" column.
     *
     * @param string $lastname
     */
    public function setLastname(?string $lastname) : void
    {
        $this->set('lastname', $lastname, 'users');
    }

    /**
     * The getter for the "email" column.
     *
     * @return string|null
     */
    public function getEmail() : ?string
    {
        return $this->get('email', 'users');
    }

    /**
     * The setter for the "email" column.
     *
     * @param string $email
     */
    public function setEmail(?string $email) : void
    {
        $this->set('email', $email, 'users');
    }

    /**
     * The getter for the "phone" column.
     *
     * @return string|null
     */
    public function getPhone() : ?string
    {
        return $this->get('phone', 'users');
    }

    /**
     * The setter for the "phone" column.
     *
     * @param string $phone
     */
    public function setPhone(?string $phone) : void
    {
        $this->set('phone', $phone, 'users');
    }


    /**
     * Serializes the object for JSON encoding.
     *
     * @param bool $stopRecursion Parameter used internally by TDBM to stop embedded objects from embedding other objects.
     * @return array
     */
    public function jsonSerialize($stopRecursion = false)
    {
        $array = [];
        $array['id'] = $this->getId();
        if (!$stopRecursion) {
            $object = $this->getAddress();
            $array['address'] = $object ? $object->jsonSerialize(true) : null;
        }
        if (!$stopRecursion) {
            $object = $this->getCompany();
            $array['company'] = $object ? $object->jsonSerialize(true) : null;
        }
        $array['firstname'] = $this->getFirstname();
        $array['lastname'] = $this->getLastname();
        $array['email'] = $this->getEmail();
        $array['phone'] = $this->getPhone();


        return $array;
    }

    /**
     * Returns an array of used tables by this bean (from parent to child relationship).
     *
     * @return string[]
     */
    protected function getUsedTables() : array
    {
        return [ 'users' ];
    }

    /**
     * Method called when the bean is removed from database.
     *
     */
    protected function onDelete() : void
    {
        parent::onDelete();
        $this->setRef('address', null, 'users');
        $this->setRef('company', null, 'users');
    }
}
